<?xml version="1.0" encoding="UTF-8"?>
<project name="QNX Build File" basedir="." default="build">
	<!-- setup -->
	<description>Build Script for Rotten Tomatoes Application</description>
	<property file="build.properties"/>
	<taskdef name="mxmlc" classname="flex.ant.MxmlcTask" classpath="${FLEX_TASKS}"/>
	<taskdef name="compc" classname="flex.ant.CompcTask" classpath="${FLEX_TASKS}"/>
	<taskdef name="asdoc" classname="flex.ant.AsDocTask" classpath="${FLEX_TASKS}"/>
	
	<!-- build -->
	<target name="build">
		<antcall target="-preclean"/>
		<antcall target="run-tests"/>
		<antcall target="package"/>
		<antcall target="run-asdoc"/>
		<antcall target="-postclean"/>
	</target>
	
	<target name="-preclean">
		<!-- remove folders -->
		<delete dir="${BUILD_DIR}" failonerror="false" includeemptydirs="true"/>
		<delete dir="${RELEASE_DIR}" failonerror="false" includeemptydirs="true"/>
		<!-- create folders -->
		<mkdir dir="${BUILD_DIR}"/>
		<mkdir dir="${RELEASE_DIR}"/>
	</target>
	
	<target name="-postclean">
		<delete dir="${BUILD_DIR}" failonerror="false" includeemptydirs="true"/>
	</target>
	
	<!-- package qnx -->
	<target name="package">
		<antcall target="-compile"/>
		<antcall target="-move-descriptor"/>
		<antcall target="-move-assets"/>
		<available file="${KEYSTORE}" property="CERTIFICATE_EXISTS"/>
		<antcall target="-certificate"/>
		<antcall target="-package"/>
		<antcall target="-sign-application"/>
	</target>
	
	<target name="-compile">
		<mxmlc file="${SRC_DIR}/RottenTomatoesQNX.mxml"
			output="${BUILD_DIR}/RottenTomatoesQNX.swf"
			debug="false" 
			failonerror="true"
			fork="true" maxmemory="512m">
			<load-config filename="${FLEX_HOME}/frameworks/airmobile-config.xml" />
			<source-path path-element="${SRC_DIR}"/>
			<library-path dir="${LIBS_DIR}" includes="*.swc" append="true"/>
			<library-path dir="${LIBRARY_DIR}/bin" includes="*.swc" append="true"/>
			<library-path dir="${QNX_SCREEN_DIR}" includes="*.swc" append="true"/>
			<library-path dir="${BLACKBERRY_LIBS}" includes="*.swc" append="true"/>
			<library-path dir="${BLACKBERRY_AIR_LIBS}" includes="qnx-air.swc" append="true"/>
		</mxmlc>
	</target>
	
	<target name="-move-descriptor">
		<copy todir="${BUILD_DIR}" file="${SRC_DIR}/blackberry-tablet.xml" overwrite="true"/>
		<copy todir="${BUILD_DIR}" file="${SRC_DIR}/RottenTomatoesQNX-app.xml" overwrite="true"/>
		<replace file="${BUILD_DIR}/RottenTomatoesQNX-app.xml" token="${CONTENT_REPLACE_STRING}" value="RottenTomatoesQNX.swf"/>
	</target>
	
	<target name="-move-assets">
		<copy todir="${BUILD_DIR}/assets" includeemptydirs="false" overwrite="true">
	        <fileset dir="${ASSETS_DIR}">
	        	<include name="**/*.png"/>
	        </fileset>
	    </copy>
	</target>
		
	<target name="-certificate" unless="${CERTIFICATE_EXISTS}">
		<exec executable="${KEYTOOL}" failonerror="true">
			<arg line="-genkeypair"/>
			<arg line="-keystore ${KEYSTORE}"/>
			<arg line="-storepass ${CERT_PASSWORD}"/>
			<arg line='-dname "cn=${CERT_ORG_NAME}"'/>
			<arg line="-alias author"/>
		</exec>
	</target>
	
	<target name="-package">
		<exec executable="${PACKAGER}" failonerror="true">
			<arg line="-package ${RELEASE_DIR}/RottenTomatoesQNX.bar"/>
			<arg line="-publisher ${CERT_ORG_NAME}"/>
			<arg line="${BUILD_DIR}/RottenTomatoesQNX-app.xml"/>
			<arg line="${BUILD_DIR}/RottenTomatoesQNX.swf"/>
			<arg line="${BUILD_DIR}/blackberry-tablet.xml"/>
			<arg line="${BUILD_DIR}/assets"/>
		</exec>
	</target>
	
	<target name="-sign-application">
		<exec executable="${SIGNER}" failonerror="true">
			<arg line="-verbose -cskpass ${CSK_PASSWORD} -keystore ${KEYSTORE} -storepass ${CERT_PASSWORD} ${RELEASE_DIR}/RottenTomatoesQNX.bar RDK"/>
		</exec>
		<exec executable="${SIGNER}" failonerror="true">
			<arg line="-verbose -keystore ${KEYSTORE} -storepass ${CERT_PASSWORD}  ${RELEASE_DIR}/RottenTomatoesQNX.bar author"/>
		</exec>
	</target>
	
	<!-- run flexunit -->
	<target name="run-tests">
	</target>
	
	<!-- run asdoc -->
	<target name="run-asdoc">
	</target>
	
</project>